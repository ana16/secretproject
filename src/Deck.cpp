#include <iostream>
#include "Feature.cpp"
#include "Tile.cpp"
#include <stack>


using namespace std;

struct feat{

int side1; //vertical
int side2; //horizontal 


}
/*
struct feat t[9];

t[3].side1 = 0;
t[3].side2 = 0;
*/
class Deck{
	
private:
	
	stack<Tile> tileStack;
	int size;
	
public:
	
<<<<<<< HEAD
	Deck{
=======
	Deck() {};
	Tile pop();
	int getSize();
>>>>>>> origin/mattdev
	
//0-field(jungle), 1-city(lake), 2-road(gametrail), 3-monestary(den)
	int type[4] = {0, 1, 2, 3};

//0-none, 1-boar, 2-buffalo, 3- deer
	int animal[4] = {0, 1, 2, 3};

	Deck(String features[]){


	}
//went by column
	/*
	int t0[12] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0];
	int t1[12] = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1];
	int t2[12] = [0, 2, 0, 1, 1, 1, 0, 0, 0, 0, 2, 0, 2, 1, 0, 2];
	int t3[12] = [0, 2, 0, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 1, 0, 3];
	int t4[12] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 4, 0, 4];
	int t5[12] = [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 0, 5];
	int t6[12] = [0, 2, 0, 1, 1, 1, 0, 0, 0, 0, 2, 0, 2, 2, 1, 6];
	//^ has boar(shield)
	int t7[12] = [0, 2, 0, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 1, 7];
	//^ has boar(shield)
	int t8[12] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 2, 0, 8];
	int t9[12] = [1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 5, 0, 9];
	int t10[12] = [0, 0, 0, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 1, 0, 10];
	int t11[12] = [0, 2, 0, 1, 1, 1, 1, 1, 1, 0, 2, 0, 0, 3, 0, 11];
	int t12[12] = [0, 2, 0, 0, 2, 0, 0, 2, 0, 0, 2, 0, 2, 1, 0, 12];
	int t13[12] = [0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 3, 0, 13];
	int t14[12] = [0, 0, 0, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 14];
	//^ has buffalo(shield)
	int t15[12] = [0, 2, 0, 1, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 2, 15];
	//^ has buffalo(shield)
	int t16[12] = [0, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 8, 0, 16];
	int t17[12] = [1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 3, 0, 17];
	int t18[12] = [0, 2, 0, 1, 1, 1, 0, 2, 0, 0, 0, 0, 2, 3, 0, 18];
	//^ starting tile
	int t19[12] = [1, 1, 1, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 2, 0, 19];
	int t20[12] = [0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 9, 0, 20];
	int t21[12] = [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 21];
	int t22[12] = [0, 2, 0, 1, 1, 1, 0, 2, 0, 0, 0, 0, 2, 2, 3, 22];
	//^ has deer(shield)
	int t23[12] = [1, 1, 1, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 2, 3, 23];
	//^ has deer(shield)
	int t24[12] = [0, 2, 0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 2, 4, 0, 24];
	int t25[12] = [0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 2, 0, 25];
	int t26[12] = [0, 2, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 0, 26];
	*/

//N, S, E, W, ne, nw, se, sw, center, tile amount, animal, tile #
	//0-Jungle, 1-Lake, 2-Game-trail, 3-Den
		//0-nothing, 1-buffalo, 2-crocodile, 3-deer, 4-boar

	int t0[12] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0];
	int t1[12] = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1];
	int t2[12] = [2, 0, 1, 2, 0, 0, 0, 0, 2, 1, 0, 2];
	int t3[12] = [2, 2, 1, 2, 0, 0, 0, 0, 2, 1, 0, 3];
	int t4[12] = [0, 0, 0, 0, 0, 0, 0, 0, 3, 4, 0, 4];
	int t5[12] = [0, 1, 1, 1, 0, 0, 1, 1, 0, 4, 0, 5];
	int t6[12] = [2, 0, 1, 2, 0, 0, 0, 0, 2, 2, 4, 6];
	//^ has boar(shield)
	int t7[12] = [2, 2, 1, 2, 0, 0, 0, 0, 2, 2, 4, 7];
	//^ has boar(shield)
	int t8[12] = [0, 2, 0, 0, 0, 0, 0, 0, 3, 2, 0, 8];
	int t9[12] = [1, 0, 1, 0, 1, 0, 0, 0, 1, 5, 0, 9];
	int t10[12] = [0, 2, 1, 2, 0, 0, 0, 0, 2, 1, 0, 10];
	int t11[12] = [2, 1, 1, 2, 0, 0, 1, 0, 0, 3, 0, 11];
	int t12[12] = [2, 2, 2, 2, 0, 0, 0, 0, 2, 1, 0, 12];
	int t13[12] = [0, 0, 1, 1, 0, 0, 0, 0, 1, 3, 0, 13];
	int t14[12] = [0, 2, 1, 2, 0, 0, 0, 0, 2, 2, 1, 14];
	//^ has buffalo(shield)
	int t15[12] = [2, 1, 1, 2, 0, 0, 1, 0, 0, 2, 1, 15];
	//^ has buffalo(shield)
	int t16[12] = [2, 2, 0, 0, 0, 0, 0, 0, 2, 8, 0, 16];
	int t17[12] = [1, 1, 0, 0, 0, 0, 0, 0, 0, 3, 0, 17];
	int t18[12] = [2, 2, 1, 0, 0, 0, 0, 0, 2, 3, 0, 18];
	//^ starting tile
	int t19[12] = [1, 2, 0, 0, 0, 0, 0, 0, 2, 1, 0, 19];
	int t20[12] = [2, 0, 0, 2, 0, 0, 0, 0, 2, 9, 0, 20];
	int t21[12] = [1, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 21];
	int t22[12] = [2, 2, 1, 0, 0, 0, 0, 0, 2, 2, 3, 22];
	//^ has deer(shield)
	int t23[12] = [1, 2, 0, 0, 0, 0, 0, 0, 2, 2, 3, 23];
	//^ has deer(shield)
	int t24[12] = [2, 2, 0, 2, 0, 0, 0, 0, 2, 4, 0, 24];
	int t25[12] = [0, 1, 1, 0, 0, 0, 0, 0, 0, 2, 0, 25];
	int t26[12] = [2, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 26];
	int t27[12] = [2, 1, 1, 1, 0, 0, 1, 1, 1, 2, 2, 27];
	}
	
<<<<<<< HEAD
	Tile pop(){
		return tileStack.pop();
	}
	
	int getSize(){
		return tileStack.size();
	}
};
=======
	 /*void Deck::pop(){
		return tileStack.pop();
	}*/
	/*int Deck::getSize(){
		return tileStack.size();
	}*/
	

>>>>>>> origin/mattdev
















